{"version":3,"sources":["components/BoxConfig.js","components/DragBox.js","components/Box.js","components/BoxTrash.svg","components/BoxTrash.js","components/AboutText.js","App.js","reportWebVitals.js","index.js"],"names":["RESIZE_LENGTH","isAvailable","width","height","guid","s4","Math","floor","random","toString","substring","getRandomColor","color","i","DragBox","isAdding","x1","y1","x2","y2","BoxConfig","id","x","y","style","fill","stroke","strokeDasharray","Box","points","className","Trash","href","TrashSvg","BoxTrash","visible","windowWidth","AboutText","windowHeight","version","xRD","xLD","dy","fontSize","textAnchor","App","useState","boxes","setBoxes","touches","setTouches","setIsAdding","clickStart","setClickStart","clickEnd","setClickEnd","isShifting","setIsShifting","shiftIndex","setShiftIndex","showTrash","setShowTrash","isResizing","setIsResizing","resizingIndex","setResizeIndex","setWindowWidth","setWindowHeight","resizeWindow","window","innerWidth","innerHeight","copyTouch","touch","identifier","touchIndexById","idToFind","findIndex","getZIndex","length","startX","Setting","startY","undefined","useEffect","addEventListener","removeEventListener","onTouchStart","evt","preventDefault","changedTouches","forEach","prev","next","push","onTouchMove","ctouch","idx","onTouchEnd","splice","onDoubleClick","button","clientX","clientY","selected","targetIndex","bringUpBox","concat","onMouseDown","selectedIndex","pickCorner","onMouseMove","dx","movementX","movementY","map","box","index","max","shiftBox","onMouseUp","newBox","key","addNewBox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f51e19ca.chunk.js","sourcesContent":["export const MIN_WIDTH = 50;\nexport const MIN_HEIGHT = 50;\n\nexport const RESIZE_MARGIN = 5;\nexport const RESIZE_LENGTH = 20;\n\nexport function isAvailable(width, height) {\n  return width >= MIN_WIDTH && height >= MIN_HEIGHT;\n}\n\nexport function guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  function s8() {\n    return s4() + s4();\n  }\n\n  function s12() {\n    return s4() + s4();\n  }\n\n  return s8() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s12();\n}\n\nexport function getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n","import * as BoxConfig from \"components/BoxConfig\";\n\nexport default function DragBox({ isAdding, x1, y1, x2, y2 }) {\n  if (x1 > x2) {\n    [x1, x2] = [x2, x1];\n  }\n\n  if (y1 > y2) {\n    [y1, y2] = [y2, y1];\n  }\n\n  let width = x2 - x1;\n  let height = y2 - y1;\n  let color = BoxConfig.isAvailable(width, height) ? \"black\" : \"red\";\n\n  return isAdding ? (\n    <rect\n      id=\"dragbox\"\n      x={x1}\n      y={y1}\n      width={width}\n      height={height}\n      style={{\n        fill: \"transparent\",\n        stroke: color,\n        strokeDasharray: \"4 2\",\n      }}\n    />\n  ) : (\n    <></>\n  );\n}\n","import { RESIZE_LENGTH, RESIZE_MARGIN } from \"components/BoxConfig\";\nimport \"./Box.css\";\n\nexport default function Box({ x, y, width, height, fill }) {\n  let points = `\n    ${x + width - RESIZE_MARGIN},${y + height - RESIZE_MARGIN}\n    ${x + width - (RESIZE_MARGIN + RESIZE_LENGTH)},${y + height - RESIZE_MARGIN}\n    ${x + width - RESIZE_MARGIN},${y + height - (RESIZE_MARGIN + RESIZE_LENGTH)}\n    `;\n  return (\n    <>\n      <rect\n        className=\"box\"\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={fill}\n      />\n      <polygon points={points} fill={\"white\"} />\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/BoxTrash.bea85dd6.svg\";","import TrashSvg from \"components/BoxTrash.svg\";\nimport \"components/BoxTrash.css\";\n\nconst Trash = ({ className }) => (\n  <g id=\"trash\" className={className}>\n    <rect x={0} y={0} width={80} height={80} />\n    <image x={0} y={0} width={80} height={80} href={TrashSvg} />\n  </g>\n);\n\nexport default function BoxTrash({ visible, windowWidth }) {\n  return <Trash className={visible ? \"visible\" : \"invisible\"} />;\n}\n","export default function AboutText({ windowWidth, windowHeight, version }) {\n  const xRD = windowWidth * 0.99;\n  const xLD = windowWidth * 0.01;\n  const y = (dy) => windowHeight + dy;\n\n  return (\n    <>\n      <text fontSize={11} x={xLD} y={y(-46)} textAnchor=\"start\">\n        R-Drag : Create box\n      </text>\n      <text fontSize={11} x={xLD} y={y(-34)} textAnchor=\"start\">\n        L-Drag on Box : Box Shift\n      </text>\n      <text fontSize={11} x={xLD} y={y(-22)} textAnchor=\"start\">\n        L-Drag on Tip : Box Resize\n      </text>\n      <text fontSize={11} x={xLD} y={y(-10)} textAnchor=\"start\">\n        DBL L-Click : Bring to front\n      </text>\n      <text fontSize={13} x={xRD} y={y(-10)} textAnchor=\"end\">\n        Box Resize@goodseog.yoo {version}\n      </text>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport DragBox from \"components/DragBox\";\nimport Box from \"components/Box\";\nimport BoxTrash from \"components/BoxTrash\";\nimport * as Setting from \"components/BoxConfig\";\nimport AboutText from \"components/AboutText\";\nimport \"./App.css\";\n\nconst VERSION = \"v0.8\";\nconst BUTTON_LEFT = 0;\nconst BUTTON_RIGHT = 2;\n\nexport default function App() {\n  const [boxes, setBoxes] = useState([]);\n\n  const [touches, setTouches] = useState([]);\n\n  const [isAdding, setIsAdding] = useState(false);\n  const [clickStart, setClickStart] = useState({ x: 0, y: 0 });\n  const [clickEnd, setClickEnd] = useState({ x: 0, y: 0 });\n\n  const [isShifting, setIsShifting] = useState(false);\n  const [shiftIndex, setShiftIndex] = useState(-1);\n  const [showTrash, setShowTrash] = useState(false);\n\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizingIndex, setResizeIndex] = useState(-1);\n\n  const [windowWidth, setWindowWidth] = useState(0);\n  const [windowHeight, setWindowHeight] = useState(0);\n  let resizeWindow = () => {\n    setWindowWidth(window.innerWidth);\n    setWindowHeight(window.innerHeight);\n  };\n\n  useEffect(() => {\n    resizeWindow();\n    window.addEventListener(\"resize\", resizeWindow);\n    return () => window.removeEventListener(\"resize\", resizeWindow);\n  }, []);\n\n  function handleTouchStart(evt) {\n    evt.preventDefault();\n    evt.changedTouches.forEach((touch) =>\n      setTouches((prev) => {\n        let next = [...prev];\n        next.push(copyTouch(touch));\n        if (next.length === 2) {\n          setIsAdding(true);\n          setClickStart({ identifier: next[0].identifier, x: next[0].x, y: next[0].y });\n          setClickEnd({ identifier: next[1].identifier, x: next[1].x, y: next[1].y });\n        }\n        return next;\n      })\n    );\n  }\n\n  function handleTouchMove(evt) {\n    evt.preventDefault();\n    evt.changedTouches.forEach((ctouch) => {\n      let idx = touchIndexById(ctouch.identifier);\n      setTouches((prev) => {\n        let next = [...prev];\n        next[idx] = copyTouch(ctouch);\n        if (clickStart.identifier === ctouch.identifier) {\n          setClickStart({ identifier: next[idx].identifier, x: next[idx].x, y: next[idx].y });\n        } else if (clickEnd.identifier === ctouch.identifier) {\n          setClickEnd({ identifier: next[idx].identifier, x: next[idx].x, y: next[idx].y });\n        }\n        return next;\n      });\n    });\n  }\n\n  function handleTouchEnd(evt) {\n    evt.changedTouches.forEach((ctouch) => {\n      let idx = touchIndexById(ctouch.identifier);\n      setTouches((prev) => {\n        let next = [...prev];\n        next.splice(idx, 1);\n        if (next.length !== 2) {\n          setIsAdding(false);\n        }\n        return next;\n      });\n    });\n  }\n\n  function copyTouch(touch) {\n    return {\n      identifier: touch.identifier,\n      x: touch.x,\n      y: touch.y,\n    };\n  }\n\n  function touchIndexById(idToFind) {\n    touches.findIndex((touch) => touch.identifier === idToFind);\n  }\n\n  function handleDoubleClick(evt) {\n    if (evt.button === BUTTON_LEFT) {\n      const [selected] = getZIndex(evt.clientX, evt.clientY);\n      BringToFront(selected);\n    }\n  }\n\n  function handleMouseDown(evt) {\n    if (evt.button === BUTTON_LEFT) {\n      const [selectedIndex, pickCorner] = getZIndex(evt.clientX, evt.clientY);\n      if (selectedIndex !== undefined) {\n        if (pickCorner) {\n          // Resize\n          setIsResizing(true);\n          setResizeIndex(selectedIndex);\n        } else {\n          // Shift\n          setIsShifting(true);\n          setShiftIndex(selectedIndex);\n          setClickStart({ x: evt.clientX, y: evt.clientY });\n          setClickEnd({ x: evt.clientX, y: evt.clientY });\n        }\n      }\n    }\n    if (evt.button === BUTTON_RIGHT) {\n      setIsAdding(true);\n      setClickStart({ x: evt.clientX, y: evt.clientY });\n      setClickEnd({ x: evt.clientX, y: evt.clientY });\n    }\n  }\n\n  function handleMouseMove(evt) {\n    isResizing && resizeBox(resizingIndex, evt.movementX, evt.movementY);\n    isShifting && shiftBox(shiftIndex, evt.movementX, evt.movementY);\n    isAdding && setClickEnd({ x: evt.clientX, y: evt.clientY });\n\n    let pickAndMove = isShifting && (clickStart.x !== evt.clientX || clickStart.y !== evt.clientY);\n    pickAndMove && setShowTrash(true);\n  }\n\n  function handleMouseUp(evt) {\n    // console.log(`Drag end on : (${evt.clientX}, ${evt.clientY})`);\n    if (evt.button === BUTTON_LEFT) {\n      if (isShifting && evt.clientX <= 80 && evt.clientY <= 80) {\n        removeBox(shiftIndex);\n      }\n      setIsShifting(false);\n      setShowTrash(false);\n      setIsResizing(false);\n    }\n    if (evt.button === BUTTON_RIGHT) {\n      setIsAdding(false);\n      addNewBox(clickStart.x, clickStart.y, evt.clientX, evt.clientY);\n    }\n  }\n\n  function addNewBox(x1, y1, x2, y2) {\n    if (x1 > x2) {\n      [x1, x2] = [x2, x1];\n    }\n    if (y1 > y2) {\n      [y1, y2] = [y2, y1];\n    }\n    let width = x2 - x1;\n    let height = y2 - y1;\n\n    if (Setting.isAvailable(width, height)) {\n      setBoxes((prev) => {\n        let newBox = {\n          key: Setting.guid(),\n          x: x1,\n          y: y1,\n          width: width,\n          height: height,\n          fill: Setting.getRandomColor(),\n        };\n        return [...prev, newBox];\n      });\n    }\n  }\n\n  function getZIndex(x, y) {\n    for (let i = boxes.length - 1; i >= 0; i--) {\n      if (\n        boxes[i].x < x &&\n        x < boxes[i].x + boxes[i].width &&\n        boxes[i].y < y &&\n        y < boxes[i].y + boxes[i].height\n      ) {\n        let startX = boxes[i].x + boxes[i].width - Setting.RESIZE_LENGTH - Setting.RESIZE_MARGIN;\n        let startY = boxes[i].y + boxes[i].height - Setting.RESIZE_LENGTH - Setting.RESIZE_MARGIN;\n        let endX = startX + Setting.RESIZE_LENGTH + Setting.RESIZE_MARGIN;\n        let endY = startY + Setting.RESIZE_LENGTH + Setting.RESIZE_MARGIN;\n        let pickCorner = startX < x && startY < y && x < endX && y < endY;\n        return [i, pickCorner];\n      }\n    }\n    return [undefined, false];\n  }\n\n  function shiftBox(targetIndex, dx, dy) {\n    setBoxes((prev) => {\n      return prev.map((box, index) => {\n        return index === targetIndex\n          ? {\n              ...box,\n              x: box.x + dx,\n              y: box.y + dy,\n            }\n          : box;\n      });\n    });\n  }\n\n  function resizeBox(targetIndex, dx, dy) {\n    setBoxes((prev) => {\n      let next = prev.map((box, index) => {\n        if (index === targetIndex) {\n          return {\n            ...box,\n            width: Math.max(box.width + dx, Setting.MIN_WIDTH),\n            height: Math.max(box.height + dy, Setting.MIN_HEIGHT),\n          };\n        } else {\n          return box;\n        }\n      });\n      return next;\n    });\n  }\n\n  function removeBox(targetIndex) {\n    setBoxes((prev) => {\n      let next = [...prev];\n      next.splice(targetIndex, 1);\n      return next;\n    });\n  }\n\n  function BringToFront(targetIndex) {\n    if (-1 < targetIndex && targetIndex < boxes.length - 1) {\n      setBoxes((prev) => {\n        let next = [...prev];\n        let bringUpBox = next.splice(targetIndex, 1);\n        return next.concat(bringUpBox);\n      });\n    }\n  }\n\n  return (\n    <svg\n      className=\"App\"\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n      onDoubleClick={handleDoubleClick}\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n    >\n      {boxes.map((box) => (\n        <Box\n          key={box.key}\n          x={box.x}\n          y={box.y}\n          width={box.width}\n          height={box.height}\n          fill={box.fill}\n        />\n      ))}\n      <BoxTrash visible={showTrash} windowWidth={windowWidth} />\n      <AboutText windowWidth={windowWidth} windowHeight={windowHeight} version={VERSION} />\n      <DragBox\n        isAdding={isAdding}\n        x1={clickStart.x}\n        y1={clickStart.y}\n        x2={clickEnd.x}\n        y2={clickEnd.y}\n      />\n    </svg>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}